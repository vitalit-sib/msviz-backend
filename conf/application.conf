mongodb.uri = "mongodb://localhost:27017/ms_viz"

swagger.api.basepath="http://localhost:9000"

# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
#
# This must be changed for production, but we recommend not changing it in this file.
#
# See http://www.playframework.com/documentation/latest/ApplicationSecret for more details.
application.secret="tJ0Rt3N<@oGhgFXmsoYYXQ=OGmn9i7R]LJn/mx1vNNn=Lh8URneM?5rkfhkuT4re"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
# application.global=Global

# Router
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point.
# Furthermore, it's assumed your route file is named properly.
# So for an application router like `my.application.Router`,
# you may need to define a router file `conf/my.application.routes`.
# Default to Routes in the root package (and conf/routes)
# application.router=my.application.Routes

# Database configuration
# ~~~~~
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/),
# by providing an application-logger.xml file in the conf directory.

# Root logger: # ERROR
logger.root=ERROR

# Logger used by the framework: # INFO
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

# Unimod XML file
unimod="/Users/admin/Work/PAF/msViz/data/unimod/150929_unimod_modified.xml"

# The buffer (nr of spectra) used when importing MS1 data. The bigger the faster,
# but you might run into a out.of.memory error
experimental.ms1.buffer=500
# the database timeout limit in minutes for inserting a buffer of ms1 data
experimental.ms2.buffer=500

# again buffer size for the new version of the Ms1 and MS2 import
experimental.ms1and2.buffer=2000
experimental.db.timeout=10

# block size for the seqeuntial import of FASTA files
theoretical.block.size=5000

#upload dir
upload.dir = "/Users/admin/tmp/"

#Actors


